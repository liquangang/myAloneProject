//
//  HomepageSecondViewController.m
//  M-Cut
//
//  Created by apple on 16/8/9.
//  Copyright © 2016年 Crab movier. All rights reserved.
//

#import "HomepageViewController.h"
#import "VideoDBOperation.h"
#import "MJRefresh.h"
#import "MyFourSearchCell2.h"
#import "SoapOperation.h"
#import "MySearchCell.h"
#import "MySearchUserCell.h"
#import <UIImageView+WebCache.h>
#import "SearchUserVC.h"
#import "Video.h"
#import "HomeVideoDetailViewController.h"
#import "MyVideoViewController.h"
#import "CustomeClass.h"
#import "MBProgressHUD.h"
#import "OssFileDown.h"
#import <AVFoundation/AVFoundation.h>
#import <AVKit/AVKit.h>
#import "ISStylePlayerCell.h"
#import "ActivityViewController.h"
#import "VideoLabelDetailViewController.h"
#import "SearchVideoTableViewCell.h"
#import "VideoShowViewController.h"
#import "AppDelegate.h"
#import "HomeSearchViewController.h"

@interface HomepageViewController ()<UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, OssFileDownDelegate>
/** 界面数据源*/
@property (nonatomic, strong) NSMutableArray * belowLabelMuArray;
@property (nonatomic, strong) NSMutableArray * aboveLabelMuArray;
@property (nonatomic, strong) UICollectionView * homeCollectionView;

/** 背景图片*/
@property (nonatomic, strong) UIImageView * backImage;
/** 背景图片上方的透明view*/
@property (nonatomic, strong) UIView * grayView;
/** 首页背景url*/
@property (nonatomic, copy) NSString * backgroundUrl;
/** 播放器*/
@property (nonatomic, strong) AVPlayerViewController * videoPlayerVc;
/** 背景的本地地址*/
@property (nonatomic, copy) NSString * localUrl;
/** 上面的背景图片*/
@property (nonatomic, strong) UIView * backgroundView;
/** 背景视频下载进度*/
@property (nonatomic, assign) float downloadProgress;

/** 搜索部分控件*/
@property (nonatomic, strong) UIView * searchView;

/** 电影集标签*/
@property (nonatomic, strong) UILabel * videoSetLabel;
@end

static NSString * homepageCollectionViewCellId = @"HomepageCollectionViewCell";
static NSString * homepageCollectionViewHeaderId = @"homepageCollectionViewHeaderId";

@implementation HomepageViewController

#pragma mark - 数组懒加载
- (NSMutableArray *)belowLabelMuArray{
    if (!_belowLabelMuArray) {
        _belowLabelMuArray = [NSMutableArray new];
    }
    return _belowLabelMuArray;
}

- (NSMutableArray *)aboveLabelMuArray{
    if (!_aboveLabelMuArray) {
        _aboveLabelMuArray = [NSMutableArray new];
    }
    return  _aboveLabelMuArray;
}

- (UIImageView *)backImage{
    if (!_backImage) {
        //背景图片
        UIImageView * image = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, ISScreen_Width / 3 * 2)];
        image.image = DEFAULTVIDEOTHUMAIL;
        image.clipsToBounds = YES;
        //设置背景图片或者视频内容
//        [self setBackImage];
        [self setVideoPlayerWithPath:[[NSBundle mainBundle] pathForResource:@"HomePageVideo3.mp4" ofType:nil]];
        _backImage = image;
    }
    return _backImage;
}

- (UIView *)grayView{
    if (!_grayView) {
        //放各个label的view
        _grayView = [[UIView alloc] initWithFrame:CGRectMake(0, self.backImage.bounds.size.height, ISScreen_Width, 114)];
        _grayView.backgroundColor = ISe6e6e6;
        _grayView.clipsToBounds = YES;
        
//        UILabel * recommendLabel = [[UILabel alloc] initWithFrame:CGRectMake(16, 150, 66, 15)];
//        recommendLabel.text = @"推荐";
//        recommendLabel.font = ISFont_14;
//        recommendLabel.textColor = [UIColor whiteColor];
//        [_grayView addSubview:recommendLabel];
        
        //设置顶部标签内容
        [self setAboveLabel];
    }
    return _grayView;
}

- (UIView *)searchView{
    if (!_searchView) {
        UIView * searchView = [[UIView alloc] initWithFrame:CGRectMake(15, 54, ISScreen_Width - 30, 26)];
        ADDTAPGESTURE(searchView, pushToSearchVc)
        
        UIImageView * searchImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 7, 12, 12)];
        [searchView addSubview:searchImage];
        searchImage.image = [UIImage imageNamed:@"searchIcon"];
        
        UILabel * searchLabel = [[UILabel alloc] initWithFrame:CGRectMake(22, 7, 100, 12)];
        [searchView addSubview:searchLabel];
        searchLabel.text = @"输入关键字搜索";
        searchLabel.textColor = [UIColor whiteColor];
        searchLabel.font = ISFont_12;
        
        UILabel * searchBelowLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 25, ISScreen_Width - 30, 0.5)];
        [searchView addSubview:searchBelowLabel];
        searchBelowLabel.backgroundColor = IS8d8986;
        
        _searchView = searchView;
    }
    return _searchView;
}

- (UILabel *)videoSetLabel{
    if (!_videoSetLabel) {
        //电影集标签
        UILabel * label = [[UILabel alloc] initWithFrame:CGRectMake(16, self.grayView.frame.size.height, ISScreen_Width - 32, 44)];
        label.backgroundColor = [UIColor whiteColor];
        label.text = @"电影集";
        label.textColor = ISLIKEGRAYCOLOR;
        label.font = ISFont_15;
        _videoSetLabel = label;
    }
    return _videoSetLabel;
}

- (UIView *)backgroundView{
    if (!_backgroundView) {
        //初始化背景view
        _backgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, self.backImage.bounds.size.height + 114)];
        _backgroundView.backgroundColor = [UIColor whiteColor];
        [_backgroundView addSubview:self.backImage];
        [_backgroundView addSubview:self.grayView];
//        [_backgroundView addSubview:self.videoSetLabel];
        [_backgroundView addSubview:self.searchView];
    }
    return _backgroundView;
}

- (UICollectionView *)homeCollectionView{
    if (!_homeCollectionView) {
        //初始化collectionView
        UICollectionViewFlowLayout * homeCollectionViewFlowLayout = [UICollectionViewFlowLayout new];
        homeCollectionViewFlowLayout.itemSize = CGSizeMake(ISScreen_Width / 2 - 1, ISScreen_Width / 2 - 1);
        homeCollectionViewFlowLayout.sectionInset = UIEdgeInsetsMake(0, 0, 0, 0);
        homeCollectionViewFlowLayout.scrollDirection = UICollectionViewScrollDirectionVertical;
        homeCollectionViewFlowLayout.minimumLineSpacing = 2;
        homeCollectionViewFlowLayout.minimumInteritemSpacing = 2;
        
        self.automaticallyAdjustsScrollViewInsets = NO;
        _homeCollectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, ISScreen_Height - 49) collectionViewLayout:homeCollectionViewFlowLayout];
        _homeCollectionView.dataSource = self;
        _homeCollectionView.delegate = self;
        
        _homeCollectionView.backgroundColor = [UIColor clearColor];
        [_homeCollectionView registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:homepageCollectionViewCellId];
        _homeCollectionView.showsVerticalScrollIndicator = NO;
        [_homeCollectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:homepageCollectionViewHeaderId];
        [_homeCollectionView addFooterWithTarget:self action:@selector(homeCollectionViewFooterRefresh)];
        [_homeCollectionView addHeaderWithTarget:self action:@selector(homeCollectionViewHeaderRefresh)];
        
        [self.view addSubview:_homeCollectionView];
    }
    return _homeCollectionView;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
        [[VideoDBOperation Singleton] setBadgeNum];
    }, )
    
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    
    //注册app进入前台
    REGISTEREDNOTI(playVideo:, APPFOREGROUND);
    //注册app进入后台
    REGISTEREDNOTI(pauseVideo:, APPBACKGROUND);
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [self.tabBarController.tabBar setHidden:NO];
    if (self.belowLabelMuArray.count == 0) {
        [self downloadDataWithOffset:0];
    }
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    //打开侧滑手势
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        self.navigationController.interactivePopGestureRecognizer.enabled = YES;
    }
}

- (void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    
    [self playVideoWhenPause];
    
//    if ([[[CustomeClass getPlistfileDataWithFileName:HOMEPAGEFILE] objectForKey:HOMEPAGEDATAKEY] floatValue] < 1.0 && [UserEntity sharedSingleton].isAppHasLogin) {
//        [OssFileDown Singleton].delegate = self;
//        [[OssFileDown Singleton] downloadHomepageBackground:self.backgroundUrl Ext:@"mp4" LocalFile:self.localUrl];
//    }
    
    //禁止侧滑手势
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        self.navigationController.interactivePopGestureRecognizer.enabled = NO;
    }
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self pauseVideoWhenPlay];
}

- (void)playVideoWhenPause{
    [self.videoPlayerVc.player play];
}

- (void)pauseVideoWhenPlay{
    [self.videoPlayerVc.player pause];
}

- (void)playVideo:(NSNotification *)noti{
    [self playVideoWhenPause];
}

- (void)pauseVideo:(NSNotification *)noti{
    [self pauseVideoWhenPlay];
}

#pragma mark - downloadData
- (void)downloadDataWithOffset:(NSInteger)offset{
    DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
        WEAKSELF(weakSelf);
        [[SoapOperation Singleton] WS_getvideolabelsexWithVideoLabelLocation:2 Offset:offset Count:66 Success:^(NSMutableArray *serverDataArray) {
            //如果传入的起始位置是0，认为是从头开始，所以移除所有元素
            if (offset == 0) {
                [weakSelf.belowLabelMuArray removeAllObjects];
            }
            
            [weakSelf.belowLabelMuArray addObjectsFromArray:[serverDataArray copy]];
            
            MAINQUEUEUPDATEUI({
                [weakSelf.homeCollectionView reloadSections:[[NSIndexSet alloc] initWithIndex:0]];
                [weakSelf.homeCollectionView footerEndRefreshing];
                [weakSelf.homeCollectionView headerEndRefreshing];
                if (serverDataArray.count == 0) {
                    [CustomeClass showMessage:@"没有更多分类了！" ShowTime:1.5];
                }
            })
        } Fail:^(NSError *error) {
            if (error.code == 6) {
                MAINQUEUEUPDATEUI({
                    [weakSelf.homeCollectionView footerEndRefreshing];
                    [weakSelf.homeCollectionView headerEndRefreshing];
                    [CustomeClass showMessage:@"没有更多分类了！" ShowTime:1.5];
                })
            }else {
                RELOADSERVERDATA([weakSelf downloadDataWithOffset:offset];)
            }
        }];
    }, {})
}

- (void)pushToSearchVc:(UITapGestureRecognizer *)tap{
    HomeSearchViewController * homeSearchVc = [HomeSearchViewController new];
    homeSearchVc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:homeSearchVc animated:YES];
}

- (void)homeCollectionViewFooterRefresh{
    [self downloadDataWithOffset:self.belowLabelMuArray.count];
}

- (void)homeCollectionViewHeaderRefresh{
    [self downloadDataWithOffset:0];
}

- (void)setAboveLabel{
    DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
        WEAKSELF(weakSelf);
        [[SoapOperation Singleton] WS_getvideolabelsexWithVideoLabelLocation:1 Offset:0 Count:66 Success:^(NSMutableArray *serverDataArray) {
            [weakSelf.aboveLabelMuArray removeAllObjects];
            [weakSelf.aboveLabelMuArray addObjectsFromArray:[serverDataArray copy]];
            dispatch_async(dispatch_get_main_queue(), ^{
                CGRect lastRect = CGRectMake(0, 10, 0, 0);
                int i = 0;
                for (MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo in serverDataArray) {
                    
                    
                    //先计算文字所占的大小，然后判断之前的那个label的位置，然后确定当前label的位置 最后lastRect 等于当前的这个label的cgrect
                    UILabel * currentLabel = [UILabel new];
                    
                    currentLabel.layer.borderColor = IS65656d.CGColor;
                    currentLabel.layer.borderWidth = 1;
                    currentLabel.layer.masksToBounds = YES;
                    currentLabel.layer.cornerRadius = 5;
                    currentLabel.text = [NSString stringWithFormat:@"%@", videoLabelInfo.szLabelName];
                    currentLabel.textAlignment = NSTextAlignmentCenter;
                    currentLabel.textColor = IS2e2e3a;
                    currentLabel.font = ISFont_12;
                    
                    if (i == 0) {
                        currentLabel.frame = CGRectMake(16, 10, ISScreen_Width / 2 - 24, 24);
                        //添加到父view上
                        [weakSelf.grayView addSubview:currentLabel];
                        lastRect = currentLabel.frame;
                        currentLabel.tag = 100 + i;
                        i++;
                        
                        //添加点击手势
                        ADDTAPGESTURE(currentLabel, videoLabelTap)
                        continue;
                    }
                    
                    if (i == 1) {
                        currentLabel.frame = CGRectMake(ISScreen_Width / 2 + 8, 10, ISScreen_Width / 2 - 24, 24);
                        //添加到父view上
                        [weakSelf.grayView addSubview:currentLabel];
                        lastRect = currentLabel.frame;
                        currentLabel.tag = 100 + i;
                        i++;
                        
                        //添加点击手势
                        ADDTAPGESTURE(currentLabel, videoLabelTap)
                        continue;
                    }
                    
                    //计算label的初始位置(x:上一个label的x＋它的width ＋ 15（加上自己的width 如果大于屏幕宽 就下移）   y 默认不变)
                    CGFloat LabelX = lastRect.origin.x + lastRect.size.width + 16;
                    CGFloat labelY = lastRect.origin.y;
                    
                    //cell内容的大小
                    CGSize contentSize = [currentLabel.text sizeWithAttributes:@{NSFontAttributeName:ISFont_12}];
                    
                    //确定cell的起始坐标点
                    if ((LabelX + contentSize.width + 54) > ISScreen_Width) {
                        LabelX = 16;
                        labelY = lastRect.origin.y + lastRect.size.height + 10;
                    }
                    
                    //如果可以添加就添加，不可以就不添加
                    if (!(labelY > 78 || (labelY > 78 && (LabelX + contentSize.width + 54) > ISScreen_Width))) {
                        //如果没有被break，说明可以继续添加，设置已经判断好的label 的rect
                        currentLabel.frame = CGRectMake(LabelX, labelY, contentSize.width + 32, 24);
                        
                        //添加到父view上
                        [weakSelf.grayView addSubview:currentLabel];
                        lastRect = currentLabel.frame;
                        currentLabel.tag = 100 + i;
                        i++;
                        
                        //添加点击手势
                        ADDTAPGESTURE(currentLabel, videoLabelTap)
                    }
                }
            });
        } Fail:^(NSError *error) {
            RELOADSERVERDATA([weakSelf setAboveLabel];)
        }];
    }, {})
}

- (void)videoLabelTap:(UITapGestureRecognizer *)tap{
    UILabel * tapLabel = (UILabel *)tap.view;
    NSInteger labelIndex = tapLabel.tag - 100;
    
    MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo = self.aboveLabelMuArray[labelIndex];
    //根据数组中的位置进行跳转
    if ([tapLabel.text isEqualToString:@"活动"] || [tapLabel.text isEqualToString:@"热门活动"]) {
        ActivityViewController * activityVC = [ActivityViewController new];
        activityVC.activityLabelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        activityVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:activityVC animated:YES];
    }else{
        VideoLabelDetailViewController * videoLabelDetailVc = [VideoLabelDetailViewController new];
        videoLabelDetailVc.labelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        videoLabelDetailVc.labelName = videoLabelInfo.szLabelName;
        videoLabelDetailVc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:videoLabelDetailVc animated:YES];
    }
}

#pragma mark - oss回调
/** 下载进度*/
- (void)OssFileDown:(OssFileDown *)pointdownself Process:(float)download{
    AppDelegate * appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.downloadProgress = download;
    [CustomeClass writeToPlistWithFileName:HOMEPAGEFILE Data:@{HOMEPAGEDATAKEY:[NSString stringWithFormat:@"%f", appDelegate.downloadProgress]}];
}

/**  下载完成/下载失败 */
- (void)OssFileDown:(OssFileDown *)pointdownself Status:(BOOL)downsuccess Fileinfo:(NSString*)filepath{
    self.localUrl = filepath;
    dispatch_async(dispatch_get_main_queue(), ^{
        if (downsuccess) {
            DEBUGSUCCESSLOG(@"主页视频下载成功")
            [self setVideoPlayerWithPath:filepath];
        }
        else{
            DEBUGLOG(@"主页视频下载失败")
            [[NSFileManager defaultManager] removeItemAtPath:filepath error:nil];
            [OssFileDown Singleton].delegate = self;
            [[OssFileDown Singleton] downloadHomepageBackground:self.backgroundUrl Ext:@"mp4" LocalFile:filepath];
        }
    });
}

- (void)setVideoPlayerWithPath:(NSString *)videoPath{
    MAINQUEUEUPDATEUI({
        self.videoPlayerVc = [AVPlayerViewController new];
        self.videoPlayerVc.player = [AVPlayer playerWithPlayerItem:[[AVPlayerItem alloc] initWithURL:[NSURL fileURLWithPath:videoPath]]];
        self.videoPlayerVc.view.frame = CGRectMake( - (self.backImage.bounds.size.height / 9 * 16 - ISScreen_Width) / 2 , 0, self.backImage.bounds.size.height / 9 * 16, self.backImage.bounds.size.height);
        [self.backImage addSubview:self.videoPlayerVc.view];
        self.videoPlayerVc.player.volume = 0;
        self.videoPlayerVc.showsPlaybackControls = NO;
        [self.videoPlayerVc.player play];
        REGISTEREDNOTI(videoPlayFinished:, AVPlayerItemDidPlayToEndTimeNotification);
    })
}

#pragma mark - 视频播放完成的通知方法
- (void)videoPlayFinished:(NSNotification *)noti{
    [self.videoPlayerVc.player replaceCurrentItemWithPlayerItem:[[AVPlayerItem alloc] initWithURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"HomePageVideo3.mp4" ofType:nil]]]];
    self.videoPlayerVc.player.volume = 0;
    [self.videoPlayerVc.player play];
}

- (void)setBackImage{
  dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
      //设置背景图片内容
      WEAKSELF(weakSelf);
      [[SoapOperation Singleton] WS_gethomepagebackgroundSuccess:^(NSString *serverString) {
          //测试
          //        serverString = @"http://movier-vdc.oss-cn-beijing.aliyuncs.com/movier/Template/Samples/Style/A007.mp4";
          weakSelf.backgroundUrl = serverString;
          NSString * filePath = [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingFormat:@"/%@",[serverString lastPathComponent]];
          weakSelf.localUrl = filePath;
          if ((![[NSFileManager defaultManager] fileExistsAtPath:filePath] || [[[CustomeClass getPlistfileDataWithFileName:HOMEPAGEFILE] objectForKey:HOMEPAGEDATAKEY] floatValue] < 1.0) && [UserEntity sharedSingleton].isAppHasLogin) {
              [CustomeClass writeToPlistWithFileName:HOMEPAGEFILE Data:@{HOMEPAGEDATAKEY:@"0"}];
              [OssFileDown Singleton].delegate = self;
              [[OssFileDown Singleton] downloadHomepageBackground:serverString Ext:[[serverString lastPathComponent] componentsSeparatedByString:@"."][1] LocalFile:[[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingFormat:@"/%@",[serverString lastPathComponent]]];
          }else if ([UserEntity sharedSingleton].isAppHasLogin){
              [self setVideoPlayerWithPath:self.localUrl];
          }
      } Fail:^(NSError *error) {
          DEBUGLOG(error)
      }];
  });
}

#pragma mark - CollectionViewDelegate

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section{
    return CGSizeMake(ISScreen_Width, self.backImage.bounds.size.height + 114);
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath{
    UICollectionReusableView * headerView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:homepageCollectionViewHeaderId forIndexPath:indexPath];
    [headerView addSubview:self.backgroundView];
    return headerView;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.belowLabelMuArray.count;
}

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    UICollectionViewCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:homepageCollectionViewCellId forIndexPath:indexPath];
    cell.clipsToBounds = YES;
    
    UIImageView * backImage = [[UIImageView alloc] initWithFrame:cell.contentView.bounds];
    [cell.contentView addSubview:backImage];
    backImage.contentMode = UIViewContentModeScaleAspectFill;
    
//    //透明度
//    UIView * transparentView = [[UIView alloc] initWithFrame:backImage.bounds];
//    [cell.contentView addSubview:transparentView];
//    transparentView.backgroundColor = [UIColor blackColor];
//    transparentView.alpha = 0.5;
//    
//    //标题
//    UILabel * titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, backImage.bounds.size.height / 2 - 12, backImage.bounds.size.width, 24)];
//    [cell.contentView addSubview:titleLabel];
//    titleLabel.textColor = [UIColor whiteColor];
//    titleLabel.backgroundColor = [UIColor clearColor];
//    titleLabel.textAlignment = NSTextAlignmentCenter;
//    titleLabel.font = [UIFont systemFontOfSize:24];
    
    MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo = self.belowLabelMuArray[indexPath.row];
    [backImage sd_setImageWithURL:[NSURL URLWithString:videoLabelInfo.szThumbnail] placeholderImage:DEFAULTVIDEOTHUMAIL options:SDWebImageRetryFailed |SDWebImageRefreshCached];
//    titleLabel.text = videoLabelInfo.szLabelName;
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo = self.belowLabelMuArray[indexPath.row];
    if ([videoLabelInfo.szLabelName isEqualToString:@"活动"] || [videoLabelInfo.szLabelName isEqualToString:@"热门活动"]) {
        ActivityViewController * activityVC = [ActivityViewController new];
        activityVC.activityLabelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        activityVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:activityVC animated:YES];
    }else{
        VideoLabelDetailViewController * videoLabelDetailVc = [VideoLabelDetailViewController new];
        videoLabelDetailVc.labelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        videoLabelDetailVc.labelName = videoLabelInfo.szLabelName;
        videoLabelDetailVc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:videoLabelDetailVc animated:YES];
    }
}
@end
