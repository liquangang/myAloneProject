//
//  HomepageSecondViewController.m
//  M-Cut
//
//  Created by apple on 16/8/9.
//  Copyright © 2016年 Crab movier. All rights reserved.
//

#import "HomepageViewController.h"
#import "VideoDBOperation.h"
#import "MJRefresh.h"
#import "MyFourSearchCell2.h"
#import "SoapOperation.h"
#import "MySearchCell.h"
#import "MySearchUserCell.h"
#import <UIImageView+WebCache.h>
#import "SearchUserVC.h"
#import "Video.h"
#import "HomeVideoDetailViewController.h"
#import "MyVideoViewController.h"
#import "CustomeClass.h"
#import "MBProgressHUD.h"
#import "OssFileDown.h"
#import <AVFoundation/AVFoundation.h>
#import <AVKit/AVKit.h>
#import "ISStylePlayerCell.h"
#import "ActivityViewController.h"
#import "VideoLabelDetailViewController.h"
#import "SearchVideoTableViewCell.h"
#import "VideoShowViewController.h"
#import "AppDelegate.h"
#import "HomeSearchViewController.h"
#import "PlayerView.h"
#import "HomePageBelowCollectionViewCell.h"

@interface HomepageViewController ()<UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
/** 界面数据源*/
@property (nonatomic, strong) NSMutableArray * belowLabelMuArray;
@property (nonatomic, strong) NSMutableArray * aboveLabelMuArray;
@property (nonatomic, strong) UICollectionView * homeCollectionView;
/** 播放器*/
@property (nonatomic, strong) AVPlayerViewController * videoPlayerVc;
/** 影集上面的部分*/
@property (nonatomic, strong) PlayerView * myPlayView;
/** item重用id*/
@property (nonatomic, copy) NSString * belowResuableStr;
/** 头部重用标识符*/
@property (nonatomic, copy) NSString * headerResuableStr;
/** 播放状态*/
@property (nonatomic, assign) BOOL isPlay;
@end

@implementation HomepageViewController

#pragma mark - 懒加载
- (NSMutableArray *)belowLabelMuArray{
    if (!_belowLabelMuArray) {
        _belowLabelMuArray = [NSMutableArray new];
    }
    return _belowLabelMuArray;
}

- (NSMutableArray *)aboveLabelMuArray{
    if (!_aboveLabelMuArray) {
        _aboveLabelMuArray = [NSMutableArray new];
    }
    return  _aboveLabelMuArray;
}

- (PlayerView *)myPlayView{
    if (!_myPlayView) {
        _myPlayView = [[PlayerView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, ISScreen_Width / 3 * 2 + 114)];
        //设置背景图片或者视频内容
        [self setVideoPlayerWithPath:[[NSBundle mainBundle] pathForResource:@"HomePageVideo3.mp4" ofType:nil]];
        [self.view addSubview:_myPlayView];
    }
    return _myPlayView;
}

- (UICollectionView *)homeCollectionView{
    if (!_homeCollectionView) {
        //初始化collectionView
        UICollectionViewFlowLayout * homeCollectionViewFlowLayout = [UICollectionViewFlowLayout new];
        homeCollectionViewFlowLayout.itemSize = CGSizeMake(ISScreen_Width / 2 - 1, ISScreen_Width / 2 - 1);
        homeCollectionViewFlowLayout.sectionInset = UIEdgeInsetsMake(0, 0, 0, 0);
        homeCollectionViewFlowLayout.scrollDirection = UICollectionViewScrollDirectionVertical;
        homeCollectionViewFlowLayout.minimumLineSpacing = 2;
        homeCollectionViewFlowLayout.minimumInteritemSpacing = 2;
        
        self.automaticallyAdjustsScrollViewInsets = NO;
        _homeCollectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, ISScreen_Height - 49) collectionViewLayout:homeCollectionViewFlowLayout];
        _homeCollectionView.dataSource = self;
        _homeCollectionView.delegate = self;
        _homeCollectionView.showsVerticalScrollIndicator = NO;
        _homeCollectionView.backgroundColor = [UIColor whiteColor];
        
        WEAKSELF(weakSelf);
        [_homeCollectionView addFooterWithCallback:^{
            [weakSelf downloadDataWithOffset:weakSelf.belowLabelMuArray.count];
        }];
        
        [_homeCollectionView addHeaderWithCallback:^{
            [weakSelf downloadDataWithOffset:0];
        }];
        
        [self.view addSubview:_homeCollectionView];
    }
    return _homeCollectionView;
}

- (void)pushToVideoLabelDetailVc:(NSNotification *)noti{
    MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo = noti.userInfo[@"videoLabelInfo"];
    NSString * labelText = noti.userInfo[@"videoLabelTitle"];
    //根据数组中的位置进行跳转
    if ([labelText isEqualToString:@"活动"] || [labelText isEqualToString:@"热门活动"]) {
        ActivityViewController * activityVC = [ActivityViewController new];
        activityVC.activityLabelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        activityVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:activityVC animated:YES];
    }else{
        VideoLabelDetailViewController * videoLabelDetailVc = [VideoLabelDetailViewController new];
        videoLabelDetailVc.labelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        videoLabelDetailVc.labelName = videoLabelInfo.szLabelName;
        videoLabelDetailVc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:videoLabelDetailVc animated:YES];
    }
}

- (void)pushToSearchVc:(NSNotification *)noti{
    HomeSearchViewController * homeSearchVc = [HomeSearchViewController new];
    homeSearchVc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:homeSearchVc animated:YES];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
        [[VideoDBOperation Singleton] setBadgeNum];
    }, )
    
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    
    //注册app进入前台
    REGISTEREDNOTI(playVideo:, APPFOREGROUND);
    //注册app进入后台
    REGISTEREDNOTI(pauseVideo:, APPBACKGROUND);
    
    REGISTEREDNOTI(pushToVideoLabelDetailVc:, PUSHTOVIDEOLABELDETAILVC);
    
    REGISTEREDNOTI(pushToSearchVc:, PUSHTOSEARCHVC);
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [self.tabBarController.tabBar setHidden:NO];
    [self downloadDataWithOffset:0];
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    //打开侧滑手势
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        self.navigationController.interactivePopGestureRecognizer.enabled = YES;
    }
}

- (void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    
    [self playVideoWhenPause];
    
    //禁止侧滑手势
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        self.navigationController.interactivePopGestureRecognizer.enabled = NO;
    }
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self pauseVideoWhenPlay];
}

- (void)playVideoWhenPause{
    if (!self.isPlay) {
        [self.videoPlayerVc.player play];
        self.isPlay = YES;
    }
}

- (void)pauseVideoWhenPlay{
    if (self.isPlay) {
        [self.videoPlayerVc.player pause];
        self.isPlay = NO;
    }
}

- (void)playVideo:(NSNotification *)noti{
    [self playVideoWhenPause];
}

- (void)pauseVideo:(NSNotification *)noti{
    [self pauseVideoWhenPlay];
}

#pragma mark - downloadData
- (void)downloadDataWithOffset:(NSInteger)offset{
    DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
        WEAKSELF(weakSelf);
        [[SoapOperation Singleton] WS_getvideolabelsexWithVideoLabelLocation:2 Offset:offset Count:66 Success:^(NSMutableArray *serverDataArray) {
            //如果传入的起始位置是0，认为是从头开始，所以移除所有元素
            if (offset == 0) {
                [weakSelf.belowLabelMuArray removeAllObjects];
            }
            
            [weakSelf.belowLabelMuArray addObjectsFromArray:[serverDataArray copy]];
            
            MAINQUEUEUPDATEUI({
                [weakSelf.homeCollectionView reloadSections:[[NSIndexSet alloc] initWithIndex:0]];
                [weakSelf.homeCollectionView footerEndRefreshing];
                [weakSelf.homeCollectionView headerEndRefreshing];
                if (serverDataArray.count == 0) {
                    [CustomeClass showMessage:@"没有更多分类了！" ShowTime:1.5];
                }
            })
        } Fail:^(NSError *error) {
            if (error.code == 6) {
                MAINQUEUEUPDATEUI({
                    [weakSelf.homeCollectionView footerEndRefreshing];
                    [weakSelf.homeCollectionView headerEndRefreshing];
                    [CustomeClass showMessage:@"没有更多分类了！" ShowTime:1.5];
                })
            }else {
                RELOADSERVERDATA([weakSelf downloadDataWithOffset:offset];)
            }
        }];
    }, {})
}



- (void)setVideoPlayerWithPath:(NSString *)videoPath{
    MAINQUEUEUPDATEUI({
        self.videoPlayerVc = [AVPlayerViewController new];
        self.videoPlayerVc.player = [AVPlayer playerWithPlayerItem:[[AVPlayerItem alloc] initWithURL:[NSURL fileURLWithPath:videoPath]]];
        CGFloat playerViewH = ISScreen_Width / 3 * 2;
        CGFloat playerViewW = playerViewH / 9 * 16;
        self.videoPlayerVc.view.frame = CGRectMake( - (playerViewW - ISScreen_Width) / 2 , 0, playerViewW, playerViewH);
        [self.myPlayView insertSubview:self.videoPlayerVc.view belowSubview:self.myPlayView.mySearchView];
        self.videoPlayerVc.player.volume = 0;
        self.videoPlayerVc.showsPlaybackControls = NO;
        [self.videoPlayerVc.player play];
        self.isPlay = YES;
        REGISTEREDNOTI(videoPlayFinished:, AVPlayerItemDidPlayToEndTimeNotification);
    })
}

#pragma mark - 视频播放完成的通知方法
- (void)videoPlayFinished:(NSNotification *)noti{
    [self.videoPlayerVc.player replaceCurrentItemWithPlayerItem:[[AVPlayerItem alloc] initWithURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"HomePageVideo3.mp4" ofType:nil]]]];
    self.videoPlayerVc.player.volume = 0;
    [self.videoPlayerVc.player play];
    self.isPlay = YES;
}

#pragma mark - CollectionViewDelegate

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section{
    return CGSizeMake(ISScreen_Width, ISScreen_Width / 3 * 2 + 114);
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath{
    if (self.headerResuableStr.length == 0) {
        [self.homeCollectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:self.headerResuableStr = @"headerResuableStr"];
    }
    UICollectionReusableView * headerView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:self.headerResuableStr forIndexPath:indexPath];
    [headerView addSubview:self.myPlayView];
    return headerView;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.belowLabelMuArray.count;
}

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    return [HomePageBelowCollectionViewCell getHomePageBelowCollectionViewCellWithCollectionView:collectionView CellInfo:self.belowLabelMuArray[indexPath.item] CellIndex:indexPath ResuableStr:self.belowResuableStr];
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    MovierDCInterfaceSvc_VDCVideoLabelEx2 * videoLabelInfo = self.belowLabelMuArray[indexPath.row];
    if ([videoLabelInfo.szLabelName isEqualToString:@"活动"] || [videoLabelInfo.szLabelName isEqualToString:@"热门活动"]) {
        ActivityViewController * activityVC = [ActivityViewController new];
        activityVC.activityLabelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        activityVC.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:activityVC animated:YES];
    }else{
        VideoLabelDetailViewController * videoLabelDetailVc = [VideoLabelDetailViewController new];
        videoLabelDetailVc.labelId = [NSString stringWithFormat:@"%@", videoLabelInfo.nLabelID];
        videoLabelDetailVc.labelName = videoLabelInfo.szLabelName;
        videoLabelDetailVc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:videoLabelDetailVc animated:YES];
    }
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    if (scrollView == self.homeCollectionView) {
        DEFAULTQUEUEANALYSISANDMAINQUEUEUPDATEUI({
            if (scrollView.contentOffset.y > ISScreen_Width / 3 * 2) {
                [self pauseVideoWhenPlay];
            }else{
                [self playVideoWhenPause];
            }
        }, {})
    }
}
@end
