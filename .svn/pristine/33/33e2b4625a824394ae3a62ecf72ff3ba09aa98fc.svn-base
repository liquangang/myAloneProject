//
//  SetViewController.m
//  M-Cut
//
//  Created by 刘海香 on 15/1/15.
//  Copyright (c) 2015年 Crab movier. All rights reserved.
//

#import "SetViewController.h"
#import "MovierTabBarViewController.h"
#import "MyAccountTableViewController.h"
#import "PersonalInfoTableViewController.h"
#import "FeedbackViewController.h"
#import "ServiceTermsViewController.h"
#import "InstructionsViewController.h"
#import "APPUserPrefs.h"
#import "SDImageCache.h"
#import "UserEntity.h"
/**  账户与安全界面*/
#import "AccountAndSafeViewController.h"

@interface SetViewController ()
/**  网络取消按钮 */
@property (weak, nonatomic) UIButton *cancleButton;
/**  网络确定按钮 */
@property (weak, nonatomic)  UIButton *confirmButton;
@end

@implementation SetViewController
//@synthesize loginViewController,window;

- (void)viewDidLoad {
    [super viewDidLoad];
    NSString *plistPath = [[NSBundle mainBundle] pathForResource:@"SettingList" ofType:@"plist"];
    self.setArra = [NSArray arrayWithContentsOfFile:plistPath];
    self.setTabView.contentInset = UIEdgeInsetsMake(-1.0, 0, 0, 0);
    self.setTabView.scrollEnabled = NO;
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _setArra.count;
}

- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    if (section == 2) {
        UIView * myView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, ISScreen_Width, 18)];
        myView.backgroundColor = [UIColor whiteColor];
        return myView;
    }
    return nil;
}   // custom view for header. will be adjusted to default or specified header height

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [[self.setArra objectAtIndex:section] count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *SetIdentifier = @"SetIdentifier";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:SetIdentifier];
    static NSString *SetIdentifier_login = @"SetIdentifier_login";
    cell.textLabel.text = _setArra[indexPath.section][indexPath.row];
    cell.detailTextLabel.text = @"";
    if (indexPath.section == 2) {
        UITableViewCell *cell_login = [tableView dequeueReusableCellWithIdentifier:SetIdentifier_login];
        UILabel * label = [[UILabel alloc] initWithFrame:CGRectMake(32, 0, ISScreen_Width - 64, 44)];
        [cell_login.contentView addSubview:label];
        label.text = self.setArra[indexPath.section][indexPath.row];
        label.textAlignment = NSTextAlignmentCenter;
        label.layer.cornerRadius = label.frame.size.height / 6;
        label.layer.masksToBounds = YES;
        label.backgroundColor = [UIColor colorWithRed:255/255.0f green:78/255.0f blue:77/255.0f alpha:1];
        label.textColor = [UIColor whiteColor];
        cell_login.backgroundColor = [UIColor whiteColor];
        cell_login.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell_login;
    }
    if ((indexPath.section == 1) &&(indexPath.row
                                    == 2)) {
        cell.accessoryType = UITableViewCellAccessoryNone;
        float cache = 0.0f;
        cell.detailTextLabel.text = [NSString stringWithFormat:@"%fM",cache];
    }
    if (indexPath.section == 0) {
        cell.accessoryType = UITableViewCellAccessoryNone;
        CGFloat padding = 10;
        // 取消
        UIButton *cancleButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [cancleButton setImage:[UIImage imageNamed:@"select"] forState:UIControlStateNormal];
        [cancleButton setImage:[UIImage imageNamed:@"selected"] forState:UIControlStateSelected];
        CGFloat cancleW = 25;
        CGFloat cancleH = 25;
        CGFloat cancleX = ISScreen_Width - padding - cancleW;
        CGFloat cancleY = (44 - cancleH) * 0.5;
        cancleButton.frame = CGRectMake(cancleX, cancleY, cancleW, cancleH);
        [cancleButton addTarget:self action:@selector(cancleClick:) forControlEvents:UIControlEventTouchUpInside];
        [cell addSubview:cancleButton];
        self.cancleButton = cancleButton;
        
        UILabel *cancleLabel = [[UILabel alloc] init];
        cancleLabel.text = @"否";
        cancleLabel.font = ISFont_12;
        CGFloat cancleLW = 15;
        CGFloat cancleLH = 20;
        CGFloat cancleLX = cancleX - padding * 0.5 - cancleLW;
        CGFloat cancleLY = cancleY;
        cancleLabel.frame = CGRectMake(cancleLX, cancleLY, cancleLW, cancleLH);
        [cell addSubview:cancleLabel];
        
        //  确定
        UIButton *confirmButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [confirmButton setImage:[UIImage imageNamed:@"select"] forState:UIControlStateNormal];
        [confirmButton setImage:[UIImage imageNamed:@"selected"] forState:UIControlStateSelected];
        CGFloat confirmW = 25;
        CGFloat confirmH = 25;
        CGFloat confirmX = cancleLX - padding - confirmW;
        CGFloat confirmY = (44 - cancleH) * 0.5;
        confirmButton.frame = CGRectMake(confirmX, confirmY, confirmW, confirmH);
        [confirmButton addTarget:self action:@selector(confirmClick:) forControlEvents:UIControlEventTouchUpInside];
        [cell addSubview:confirmButton];
        self.confirmButton = confirmButton;
        
        UILabel *confirmLabel = [[UILabel alloc] init];
        confirmLabel.text = @"是";
        confirmLabel.font = ISFont_12;
        CGFloat confirmLW = 15;
        CGFloat confirmLH = 20;
        CGFloat confirmLX = confirmX - padding * 0.5 - confirmLW;
        CGFloat confirmLY = confirmY;
        confirmLabel.frame = CGRectMake(confirmLX, confirmLY, confirmLW, confirmLH);
        [cell addSubview:confirmLabel];
        
        // 判断网络是否可用, 设置选择按钮
        if ([APPUserPrefs Singleton].wwanable == YES) {
            confirmButton.selected = YES;
            cancleButton.selected  = NO;
        } else {
            confirmButton.selected = NO;
            cancleButton.selected  = YES;
        }
    }
    return cell;
}

/**  取消3\4G网络使用 */
- (void)cancleClick:(UIButton *)cancle {
    if (self.cancleButton.selected == NO) {
        self.confirmButton.selected = NO;
        self.cancleButton.selected = YES;
        [APPUserPrefs Singleton].wwanable = NO;
        NSLog(@"------%d", [APPUserPrefs Singleton].wwanable);
    } else {
        self.confirmButton.selected = YES;
        self.cancleButton.selected = NO;
        [APPUserPrefs Singleton].wwanable = YES;
        NSLog(@"------%d", [APPUserPrefs Singleton].wwanable);
    }
}
/**  3\4G网络使用 */
- (void)confirmClick:(UIButton *)confirm {
    if (self.confirmButton.selected == NO) {
        self.confirmButton.selected = YES;
        self.cancleButton.selected = NO;
        [APPUserPrefs Singleton].wwanable = YES;
        NSLog(@"------%d", [APPUserPrefs Singleton].wwanable);
    } else {
        self.confirmButton.selected = NO;
        self.cancleButton.selected = YES;
        [APPUserPrefs Singleton].wwanable = NO;
        NSLog(@"------%d", [APPUserPrefs Singleton].wwanable);
    }
}

- (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    switch (section) {
        case 0:
            return 2;
            break;
        case 1:
            return 8;
        case 2:
            return 18;
        default:
            break;
    }
    return 0;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//    if (indexPath.section == 0) {
//        UIStoryboard *setStroyBoard = [UIStoryboard storyboardWithName:@"Setting" bundle:nil];
//        PersonalInfoTableViewController *personInfoTabVC = [setStroyBoard instantiateViewControllerWithIdentifier:@"PersonInfoTabVCStoryBoardID"];
//        [self.navigationController pushViewController:personInfoTabVC animated:YES];
//    }
    if ((indexPath.section == 1)&&(indexPath.row == 0)) {
        UIStoryboard *setStroyBoard = [UIStoryboard storyboardWithName:@"Setting" bundle:nil];
        ServiceTermsViewController *serviceTermsVC =[setStroyBoard instantiateViewControllerWithIdentifier:@"ServiceTermsVCStoryBoardID"];
        [self.navigationController pushViewController:serviceTermsVC animated:YES];
    }
    if ((indexPath.section == 1)&&(indexPath.row == 1)) {
        UIStoryboard *setStroyBoard = [UIStoryboard storyboardWithName:@"Setting" bundle:nil];
        FeedbackViewController *feedbackVC = [setStroyBoard instantiateViewControllerWithIdentifier:@"FeedbackVCStoryBoardID"];
        [self.navigationController pushViewController:feedbackVC animated:YES];
    }
    if ((indexPath.section == 1)&&(indexPath.row == 2)) {
        
//        UIStoryboard *setStroyBoard = [UIStoryboard storyboardWithName:@"Setting" bundle:nil];
//        InstructionsViewController *instructionsVC = [setStroyBoard instantiateViewControllerWithIdentifier:@"InstructionsVCStoryboardID"];
//        [self.navigationController pushViewController:instructionsVC animated:YES];
    }
    if ((indexPath.section == 1)&&(indexPath.row == 2)) {
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{NSString *cachPath = [NSSearchPathForDirectoriesInDomains(NSCachesDirectory,NSUserDomainMask, YES) objectAtIndex:0];
            NSArray *files = [[NSFileManager defaultManager] subpathsAtPath:cachPath];
            for (NSString *p in files) {
                NSError *error;
                NSString *path = [cachPath stringByAppendingPathComponent:p];
                if ([[NSFileManager defaultManager] fileExistsAtPath:path]) {
                    [[NSFileManager defaultManager] removeItemAtPath:path error:&error];
                }
            }
            [self performSelectorOnMainThread:@selector(clearCacheSuccess) withObject:nil waitUntilDone:YES];});
    }
    if (indexPath.section == 2) {
        [self popLogoutActionSheet];
    }
    if (indexPath.section == 1 && indexPath.row == 3) {
        AccountAndSafeViewController * accountAndSafeVC = [AccountAndSafeViewController new];
        [self.navigationController pushViewController:accountAndSafeVC animated:YES];
    }
}
#pragma 清理缓存图片
-(void)clearCacheSuccess
{
    [[SDImageCache sharedImageCache]clearDisk];
    [[SDImageCache sharedImageCache]clearMemory];
    NSLog(@"清理成功");
}
#pragma  mark - 弹出退出登录提醒
-(void)popLogoutActionSheet
{
    //在这里呼出下方菜单按钮项
    logoutActionSheet = [[UIActionSheet alloc]
                         initWithTitle:nil
                         delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"退出登录", nil];
    [logoutActionSheet showInView:self.view];
}
#pragma mark - UIActionSheetDelegate

- (void)willPresentActionSheet:(UIActionSheet *)actionSheet{
    
    for (UIView *view in actionSheet.subviews) {
        if (view.tag == 0) {
            UIButton *button = (UIButton *) view;
            [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        } else {
            UIButton *button = (UIButton *) view;
            [button setImage:[UIImage imageNamed:@"login_button"] forState:UIControlStateNormal];
            [button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        }
    
    }
}
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    //呼出的菜单按钮点击后的响应
    if (buttonIndex == logoutActionSheet.cancelButtonIndex){
        NSLog(@"取消");
    }
    if (buttonIndex == 0) {
        NSLog(@"退出登录");
//        [APPUserPrefs APP_logout];
        [[NSNotificationCenter defaultCenter] postNotificationName:MSG_CUSTOMER_BAC_THREAD_OFF object:nil];
        [[UserEntity sharedSingleton] Applogout];
        [SoapOperation Singleton].WS_Session = nil;//ws_session 清空
        //订单恢复
        [self.navigationController popToRootViewControllerAnimated:YES];
    }
}

@end
